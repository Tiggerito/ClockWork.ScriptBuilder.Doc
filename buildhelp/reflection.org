<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="ClockWork.ScriptBuilder">
      <assemblydata version="1.0.1.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010085AA9F4284423935231B3935D0582507185FC65A5D0DB5E44BC5FEB0B2C0A1549524B851BD4EF068380B462E4046C1B8CF476D4BFF0E2AF13B71A972015455FA70F0C7CD95E2EE0ADA67DADAD4BF797CD74E03716BDB4C5E3823D5CEE956D2C3CDCE300136BB442C65A6011E2E773C1DD33DCC9292F2BBBAE1B7C934FE4B6EB8" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ClockWork Script Builder</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright ©  2008</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>d4a81778-9bb4-4294-abbd-02ec1fcd1934</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.1.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ClockWork.ScriptBuilder</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Anthony James McCreath</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:ClockWork.ScriptBuilder">
      <apidata name="ClockWork.ScriptBuilder" group="namespace" />
      <elements>
        <element api="T:ClockWork.ScriptBuilder.IScriptItem" />
        <element api="T:ClockWork.ScriptBuilder.ScriptItem" />
        <element api="T:ClockWork.ScriptBuilder.ScriptSet" />
        <element api="T:ClockWork.ScriptBuilder.ScriptLine" />
        <element api="T:ClockWork.ScriptBuilder.ScriptFormatProvider" />
        <element api="T:ClockWork.ScriptBuilder.ScriptWrapper" />
        <element api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" />
        <element api="T:ClockWork.ScriptBuilder.RenderingEventArgs" />
        <element api="T:ClockWork.ScriptBuilder.LayoutChangedEventArgs" />
        <element api="T:ClockWork.ScriptBuilder.Script" />
        <element api="T:ClockWork.ScriptBuilder.ScriptIndent" />
        <element api="T:ClockWork.ScriptBuilder.Sb" />
        <element api="T:ClockWork.ScriptBuilder.IScriptWriter" />
        <element api="T:ClockWork.ScriptBuilder.ScriptIf" />
        <element api="T:ClockWork.ScriptBuilder.Encryption" />
        <element api="T:ClockWork.ScriptBuilder.ScriptCompressible" />
        <element api="T:ClockWork.ScriptBuilder.ScriptLayout" />
        <element api="T:ClockWork.ScriptBuilder.ScriptWriter" />
      </elements>
    </api>
    <api id="T:ClockWork.ScriptBuilder.Encryption">
      <apidata name="Encryption" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.Encryption.ReadSecureString(System.Security.SecureString)" />
        <element api="M:ClockWork.ScriptBuilder.Encryption.CreateSecureString(System.String)" />
        <element api="M:ClockWork.ScriptBuilder.Encryption.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Encryption.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Encryption" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Encryption.CreateSecureString(System.String)">
      <apidata name="CreateSecureString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.SecureString" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Encryption" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Encryption.ReadSecureString(System.Security.SecureString)">
      <apidata name="ReadSecureString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.Security.SecureString" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Encryption" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.IScriptItem">
      <apidata name="IScriptItem" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </implementors>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.IScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.IScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.IScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.IScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="P:ClockWork.ScriptBuilder.IScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.IScriptItem.Layout" />
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.IScriptItem.HasRenderContent">
      <apidata name="HasRenderContent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasRenderContent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.IScriptItem.Layout">
      <apidata name="Layout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Layout" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </parameter>
        <parameter name="indents">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptItem.Render(System.IFormatProvider)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="formatProvider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name="TrySetLayout" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.IScriptWriter">
      <apidata name="IScriptWriter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </implementors>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.IScriptWriter.BeginIndent" />
        <element api="M:ClockWork.ScriptBuilder.IScriptWriter.BeginIndent(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.IScriptWriter.EndIndent" />
        <element api="M:ClockWork.ScriptBuilder.IScriptWriter.EndIndent(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.IScriptWriter.WriteNewLineAndIndent" />
        <element api="M:ClockWork.ScriptBuilder.IScriptWriter.Write(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.IScriptWriter.Format(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.IScriptWriter.Flush" />
        <element api="M:ClockWork.ScriptBuilder.IScriptWriter.Close" />
        <element api="P:ClockWork.ScriptBuilder.IScriptWriter.CurrentIndentLevel" />
        <element api="P:ClockWork.ScriptBuilder.IScriptWriter.FormatProvider" />
        <element api="P:ClockWork.ScriptBuilder.IScriptWriter.Compress" />
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptWriter.BeginIndent">
      <apidata name="BeginIndent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptWriter.BeginIndent(System.Int32)">
      <apidata name="BeginIndent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="levels">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptWriter.Close">
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.IScriptWriter.Compress">
      <apidata name="Compress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Compress" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.IScriptWriter.CurrentIndentLevel">
      <apidata name="CurrentIndentLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CurrentIndentLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptWriter.EndIndent">
      <apidata name="EndIndent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptWriter.EndIndent(System.Int32)">
      <apidata name="EndIndent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="levels">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptWriter.Flush">
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptWriter.Format(System.Object)">
      <apidata name="Format" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.IScriptWriter.FormatProvider">
      <apidata name="FormatProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_FormatProvider" />
      <returns>
        <type api="T:System.IFormatProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptWriter.Write(System.Object)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.IScriptWriter.WriteNewLineAndIndent">
      <apidata name="WriteNewLineAndIndent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.LayoutChangedEventArgs">
      <apidata name="LayoutChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.LayoutChangedEventArgs.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="P:ClockWork.ScriptBuilder.LayoutChangedEventArgs.Layout" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.LayoutChangedEventArgs.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.LayoutChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.LayoutChangedEventArgs.Layout">
      <apidata name="Layout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Layout" />
      <setter name="set_Layout" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.LayoutChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.RenderingEventArgs">
      <apidata name="RenderingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.RenderingEventArgs.#ctor(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="P:ClockWork.ScriptBuilder.RenderingEventArgs.Writer" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.RenderingEventArgs.#ctor(ClockWork.ScriptBuilder.IScriptWriter)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.RenderingEventArgs.Writer">
      <apidata name="Writer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Writer" />
      <setter name="set_Writer" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.Sb">
      <apidata name="Sb" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.Sb.Script(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.Sb.Script(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.Sb.Line(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.Sb.Line(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.Sb.ScriptIf(System.Object,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.Sb.ScriptIf(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.Sb.Indent(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.Sb.Indent(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.Sb.Wrapper(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.IScriptItem,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.Sb.Wrapper(System.Object,ClockWork.ScriptBuilder.IScriptItem,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.Sb.TrySetLayout(System.Object,ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.Sb.Compressible(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.Sb.HasRenderContent(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.Sb.Render(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.Sb.Render(System.Object,System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.Sb.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.Compressible(System.Object,System.Object)">
      <apidata name="Compressible" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="full">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="compressed">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptCompressible" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.HasRenderContent(System.Object)">
      <apidata name="HasRenderContent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.Indent(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name="Indent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptIndent" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.Indent(System.Object[])">
      <apidata name="Indent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptIndent" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.Line(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name="Line" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="parts" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLine" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.Line(System.Object[])">
      <apidata name="Line" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parts" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLine" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.Render(System.Object)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.Render(System.Object,System.Int32)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="indentations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.Script(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name="Script" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.Script(System.Object[])">
      <apidata name="Script" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.ScriptIf(System.Object,System.Object)">
      <apidata name="ScriptIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="test">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="trueValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.ScriptIf(System.Object,System.Object,System.Object)">
      <apidata name="ScriptIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="test">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="trueValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="falseValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.TrySetLayout(System.Object,ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name="TrySetLayout" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.Wrapper(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.IScriptItem,System.Object)">
      <apidata name="Wrapper" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="before">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </parameter>
        <parameter name="after">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Sb.Wrapper(System.Object,ClockWork.ScriptBuilder.IScriptItem,System.Object)">
      <apidata name="Wrapper" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="before">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </parameter>
        <parameter name="after">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Sb" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.Script">
      <apidata name="Script" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:ClockWork.ScriptBuilder.ScriptIndent" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.Script.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.Script.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.Script.#ctor(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.Script.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.Script.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.Script.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="P:ClockWork.ScriptBuilder.Script.DefaultLayout" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.AddToRenderList(System.Collections.Generic.List{System.Object},System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.WriteSeperator(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RegisterItem(System.String,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Remove(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.ToString" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Items" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Seperator" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.ScriptIfResult" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContentInSet" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Script.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Script.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Script.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Script.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Script.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.Script.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.Script.DefaultLayout">
      <apidata name="DefaultLayout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultLayout" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.ScriptCompressible">
      <apidata name="ScriptCompressible" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.ScriptCompressible.#ctor(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptCompressible.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptCompressible.Full" />
        <element api="P:ClockWork.ScriptBuilder.ScriptCompressible.Compressed" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptCompressible.#ctor(System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="full">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="compressed">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptCompressible" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptCompressible.Compressed">
      <apidata name="Compressed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Compressed" />
      <setter name="set_Compressed" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptCompressible" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptCompressible.Full">
      <apidata name="Full" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Full" />
      <setter name="set_Full" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptCompressible" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptCompressible.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptCompressible" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.ScriptFormatProvider">
      <apidata name="ScriptFormatProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IFormatProvider" ref="true" />
        <type api="T:System.ICustomFormatter" ref="true" />
      </implements>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.ScriptFormatProvider.Format(System.String,System.Object,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptFormatProvider.System#IFormatProvider#GetFormat(System.Type)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptFormatProvider.#ctor" />
        <element api="P:ClockWork.ScriptBuilder.ScriptFormatProvider.Instance" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptFormatProvider.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptFormatProvider" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptFormatProvider.Format(System.String,System.Object,System.IFormatProvider)">
      <apidata name="Format" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="formatProvider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <type api="T:System.ICustomFormatter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptFormatProvider" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptFormatProvider.Instance">
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptFormatProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptFormatProvider" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptFormatProvider.System#IFormatProvider#GetFormat(System.Type)">
      <apidata name="GetFormat" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="formatType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormatProvider.GetFormat(System.Type)">
          <type api="T:System.IFormatProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptFormatProvider" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.ScriptIf">
      <apidata name="ScriptIf" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.ScriptIf.#ctor(System.Object,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptIf.#ctor(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptIf.ObjectScriptIfResult(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptIf.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptIf.Test" />
        <element api="P:ClockWork.ScriptBuilder.ScriptIf.TrueValue" />
        <element api="P:ClockWork.ScriptBuilder.ScriptIf.FalseValue" />
        <element api="P:ClockWork.ScriptBuilder.ScriptIf.TestResult" />
        <element api="P:ClockWork.ScriptBuilder.ScriptIf.Winner" />
        <element api="P:ClockWork.ScriptBuilder.ScriptIf.ScriptIfResult" />
        <element api="P:ClockWork.ScriptBuilder.ScriptIf.HasRenderContent" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptIf.#ctor(System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="test">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="trueValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptIf.#ctor(System.Object,System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="test">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="trueValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="falseValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptIf.FalseValue">
      <apidata name="FalseValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FalseValue" />
      <setter name="set_FalseValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptIf.HasRenderContent">
      <apidata name="HasRenderContent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasRenderContent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:ClockWork.ScriptBuilder.IScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptIf.ObjectScriptIfResult(System.Object)">
      <apidata name="ObjectScriptIfResult" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptIf.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptIf.ScriptIfResult">
      <apidata name="ScriptIfResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ScriptIfResult" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptIf.Test">
      <apidata name="Test" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Test" />
      <setter name="set_Test" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptIf.TestResult">
      <apidata name="TestResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TestResult" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptIf.TrueValue">
      <apidata name="TrueValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TrueValue" />
      <setter name="set_TrueValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptIf.Winner">
      <apidata name="Winner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Winner" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.ScriptIndent">
      <apidata name="ScriptIndent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.ScriptIndent.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.ScriptIndent.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptIndent.#ctor(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.ScriptIndent.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.ScriptIndent.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptIndent.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptIndent.OnInitialise" />
        <element api="P:ClockWork.ScriptBuilder.Script.DefaultLayout" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.AddToRenderList(System.Collections.Generic.List{System.Object},System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.WriteSeperator(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RegisterItem(System.String,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Remove(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.ToString" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Items" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Seperator" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.ScriptIfResult" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContentInSet" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptIndent.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIndent" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptIndent.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIndent" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptIndent.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIndent" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptIndent.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIndent" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptIndent.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIndent" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptIndent.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIndent" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptIndent.OnInitialise">
      <apidata name="OnInitialise" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptIndent" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.ScriptItem">
      <apidata name="ScriptItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptIf" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptCompressible" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.XmlScript.XsText" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.XmlScript.XsAttribute" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.XmlScript.XsCData" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsNew" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsQuote" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsProperty" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
      </implements>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.ObjectTrySetLayout(System.Object,ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.ObjectHasRenderContent(System.Object)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout">
      <apidata name="DefaultLayout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_DefaultLayout" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent">
      <apidata name="HasRenderContent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasRenderContent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:ClockWork.ScriptBuilder.IScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptItem.Indents">
      <apidata name="Indents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Indents" />
      <setter name="set_Indents" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished">
      <apidata name="IsLayoutEstablished" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLayoutEstablished" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptItem.Layout">
      <apidata name="Layout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Layout" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <implements>
        <member api="P:ClockWork.ScriptBuilder.IScriptItem.Layout">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged">
      <apidata name="LayoutChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_LayoutChanged" />
      <remover name="remove_LayoutChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:ClockWork.ScriptBuilder.LayoutChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:ClockWork.ScriptBuilder.LayoutChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.ObjectHasRenderContent(System.Object)">
      <apidata name="ObjectHasRenderContent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.ObjectTrySetLayout(System.Object,ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name="ObjectTrySetLayout" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise">
      <apidata name="OnInitialise" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)">
      <apidata name="OnLayoutChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.LayoutChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.Render">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </parameter>
        <parameter name="indents">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="formatProvider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptItem.Render(System.IFormatProvider)">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="formatProvider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.StreamWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.StreamWriter" ref="true" />
        </parameter>
        <parameter name="formatProvider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="formatProvider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringBuilder">
          <type api="T:System.Text.StringBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringBuilder">
          <type api="T:System.Text.StringBuilder" ref="true" />
        </parameter>
        <parameter name="formatProvider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="E:ClockWork.ScriptBuilder.ScriptItem.Rendering">
      <apidata name="Rendering" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Rendering" />
      <remover name="remove_Rendering" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult">
      <apidata name="ScriptIfResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ScriptIfResult" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name="TrySetLayout" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)">
      <apidata name="TrySetLayout" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="onlyIfNotAlreadyEstablished">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.ScriptLayout">
      <apidata name="ScriptLayout" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:ClockWork.ScriptBuilder.ScriptLayout.None" />
        <element api="F:ClockWork.ScriptBuilder.ScriptLayout.NotAlreadyEstablished" />
        <element api="F:ClockWork.ScriptBuilder.ScriptLayout.Default" />
        <element api="F:ClockWork.ScriptBuilder.ScriptLayout.Inline" />
        <element api="F:ClockWork.ScriptBuilder.ScriptLayout.InlineBlock" />
        <element api="F:ClockWork.ScriptBuilder.ScriptLayout.Block" />
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="F:ClockWork.ScriptBuilder.ScriptLayout.Block">
      <apidata name="Block" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </containers>
    </api>
    <api id="F:ClockWork.ScriptBuilder.ScriptLayout.Default">
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </containers>
    </api>
    <api id="F:ClockWork.ScriptBuilder.ScriptLayout.Inline">
      <apidata name="Inline" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </containers>
    </api>
    <api id="F:ClockWork.ScriptBuilder.ScriptLayout.InlineBlock">
      <apidata name="InlineBlock" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </containers>
    </api>
    <api id="F:ClockWork.ScriptBuilder.ScriptLayout.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </containers>
    </api>
    <api id="F:ClockWork.ScriptBuilder.ScriptLayout.NotAlreadyEstablished">
      <apidata name="NotAlreadyEstablished" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.ScriptLine">
      <apidata name="ScriptLine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.ScriptLine.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.ScriptLine.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptLine.#ctor(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.ScriptLine.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.ScriptLine.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptLine.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.AddToRenderList(System.Collections.Generic.List{System.Object},System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.WriteSeperator(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RegisterItem(System.String,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Remove(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.ToString" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Items" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Seperator" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.ScriptIfResult" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContentInSet" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptLine.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptLine" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptLine.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptLine" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptLine.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptLine" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptLine.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptLine" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptLine.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptLine" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptLine.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptLine" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.ScriptSet">
      <apidata name="ScriptSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:ClockWork.ScriptBuilder.ScriptLine" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.#ctor(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.AddToRenderList(System.Collections.Generic.List{System.Object},System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.WriteSeperator(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RegisterItem(System.String,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Remove(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.ToString" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Items" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Seperator" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.ScriptIfResult" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContentInSet" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.Add(System.Object)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.AddRange(System.Object[])">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.AddToRenderList(System.Collections.Generic.List{System.Object},System.Object)">
      <apidata name="AddToRenderList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="dest">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.Contains(System.Object)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.CopyTo(System.Object[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptSet.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContent">
      <apidata name="HasRenderContent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasRenderContent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:ClockWork.ScriptBuilder.IScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContentInSet">
      <apidata name="HasRenderContentInSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasRenderContentInSet" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.IndexOf(System.Object)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.Insert(System.Int32,System.Object)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.InsertRange(System.Object[])">
      <apidata name="InsertRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptSet.IsReadOnly">
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptSet.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptSet.Items">
      <apidata name="Items" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Items" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.RegisterItem(System.String,System.Object)">
      <apidata name="RegisterItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.Remove(System.Object)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.RemoveAt(System.Int32)">
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptSet.ScriptIfResult">
      <apidata name="ScriptIfResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ScriptIfResult" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptSet.Seperator">
      <apidata name="Seperator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Seperator" />
      <setter name="set_Seperator" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSet.WriteSeperator(ClockWork.ScriptBuilder.IScriptWriter)">
      <apidata name="WriteSeperator" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.ScriptSetWrapper">
      <apidata name="ScriptSetWrapper" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.ScriptSet,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.#ctor(System.Object,ClockWork.ScriptBuilder.ScriptSet,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.#ctor(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Remove(System.Object)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Set" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.SetWrapper(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Before" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Content" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.After" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ContentLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.InternalIndents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ScriptIfResult" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.ScriptSet,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="before">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="set">
          <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
        </parameter>
        <parameter name="after">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="before">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="after">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.#ctor(System.Object,ClockWork.ScriptBuilder.ScriptSet,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="before">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="set">
          <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
        </parameter>
        <parameter name="after">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.#ctor(System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="before">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="after">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Add(System.Object)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.AddRange(System.Object[])">
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Contains(System.Object)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.CopyTo(System.Object[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.IndexOf(System.Object)">
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Insert(System.Int32,System.Object)">
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.InsertRange(System.Object[])">
      <apidata name="InsertRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptSetWrapper.IsReadOnly">
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Remove(System.Object)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.RemoveAt(System.Int32)">
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Set">
      <apidata name="Set" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Set" />
      <setter name="set_Set" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.ScriptWrapper">
      <apidata name="ScriptWrapper" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.#ctor(System.Object,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.SetWrapper(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Before" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Content" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.After" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ContentLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.InternalIndents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ScriptIfResult" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWrapper.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWrapper.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWrapper.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="before">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="after">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWrapper.#ctor(System.Object,System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="before">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="after">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWrapper.After">
      <apidata name="After" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_After" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWrapper.Before">
      <apidata name="Before" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Before" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWrapper.Content">
      <apidata name="Content" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Content" />
      <setter name="set_Content" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWrapper.ContentLayout">
      <apidata name="ContentLayout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentLayout" />
      <setter name="set_ContentLayout" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWrapper.HasRenderContent">
      <apidata name="HasRenderContent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasRenderContent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:ClockWork.ScriptBuilder.IScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWrapper.InternalIndents">
      <apidata name="InternalIndents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InternalIndents" />
      <setter name="set_InternalIndents" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWrapper.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)">
      <apidata name="OnLayoutChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.LayoutChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWrapper.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWrapper.ScriptIfResult">
      <apidata name="ScriptIfResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ScriptIfResult" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWrapper.SetWrapper(System.Object,System.Object)">
      <apidata name="SetWrapper" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="before">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="after">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.ScriptWriter">
      <apidata name="ScriptWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
      </implements>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.#ctor(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.#ctor(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.#ctor(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.#ctor(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.#ctor(System.IO.TextWriter,ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.#ctor(System.IO.Stream,ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.CopySettings(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.Write(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.WriteNewLineAndIndent(System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.WriteNewLineAndIndent" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.WriteNewLine" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.WriteIndent" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.Format(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.Format(System.String,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.BeginIndent" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.BeginIndent(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.EndIndent" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.EndIndent(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.Close" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.Flush" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWriter.ToString" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWriter.FormatProvider" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWriter.Compress" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWriter.CurrentIndentLevel" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWriter.IndentText" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWriter.IncludeIndentation" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWriter.IndentString" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWriter.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWriter.IsStartOfLine" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWriter.NewLine" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.#ctor(System.IO.Stream)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.#ctor(System.IO.Stream,ClockWork.ScriptBuilder.IScriptWriter)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="scriptWriter">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.#ctor(System.IO.Stream,System.IFormatProvider)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="formatProvider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.#ctor(System.IO.TextWriter)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.#ctor(System.IO.TextWriter,ClockWork.ScriptBuilder.IScriptWriter)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="scriptWriter">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.#ctor(System.IO.TextWriter,System.IFormatProvider)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="formatProvider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.BeginIndent">
      <apidata name="BeginIndent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptWriter.BeginIndent">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.BeginIndent(System.Int32)">
      <apidata name="BeginIndent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="levels">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptWriter.BeginIndent(System.Int32)">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.Close">
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptWriter.Close">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWriter.Compress">
      <apidata name="Compress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Compress" />
      <setter name="set_Compress" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:ClockWork.ScriptBuilder.IScriptWriter.Compress">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.CopySettings(ClockWork.ScriptBuilder.IScriptWriter)">
      <apidata name="CopySettings" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="scriptWriter">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWriter.CurrentIndentLevel">
      <apidata name="CurrentIndentLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentIndentLevel" />
      <setter name="set_CurrentIndentLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:ClockWork.ScriptBuilder.IScriptWriter.CurrentIndentLevel">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.EndIndent">
      <apidata name="EndIndent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptWriter.EndIndent">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.EndIndent(System.Int32)">
      <apidata name="EndIndent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="levels">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptWriter.EndIndent(System.Int32)">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.Flush">
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptWriter.Flush">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.Format(System.Object)">
      <apidata name="Format" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptWriter.Format(System.Object)">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.Format(System.String,System.Object)">
      <apidata name="Format" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWriter.FormatProvider">
      <apidata name="FormatProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_FormatProvider" />
      <returns>
        <type api="T:System.IFormatProvider" ref="true" />
      </returns>
      <implements>
        <member api="P:ClockWork.ScriptBuilder.IScriptWriter.FormatProvider">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWriter.IncludeIndentation">
      <apidata name="IncludeIndentation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeIndentation" />
      <setter name="set_IncludeIndentation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWriter.Indents">
      <apidata name="Indents" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Indents" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWriter.IndentString">
      <apidata name="IndentString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IndentString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWriter.IndentText">
      <apidata name="IndentText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IndentText" />
      <setter name="set_IndentText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWriter.IsStartOfLine">
      <apidata name="IsStartOfLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsStartOfLine" />
      <setter name="set_IsStartOfLine" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.ScriptWriter.NewLine">
      <apidata name="NewLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NewLine" />
      <setter name="set_NewLine" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.Write(System.Object)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptWriter.Write(System.Object)">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.WriteIndent">
      <apidata name="WriteIndent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.WriteNewLine">
      <apidata name="WriteNewLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.WriteNewLineAndIndent">
      <apidata name="WriteNewLineAndIndent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:ClockWork.ScriptBuilder.IScriptWriter.WriteNewLineAndIndent">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.ScriptWriter.WriteNewLineAndIndent(System.Boolean)">
      <apidata name="WriteNewLineAndIndent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="unlessAtStartOfLine">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder" />
        <type api="T:ClockWork.ScriptBuilder.ScriptWriter" ref="true" />
      </containers>
    </api>
    <api id="N:ClockWork.ScriptBuilder.JavaScript">
      <apidata name="ClockWork.ScriptBuilder.JavaScript" group="namespace" />
      <elements>
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsNew" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsList" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsVariableFactory" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsQuote" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsProperty" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.Js" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" />
      </elements>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.Js">
      <apidata name="Js" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Q(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Quote(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.QQ(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.QuoteDouble(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.New(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.New(System.Object,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Object(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Object(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Property(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Property(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Array(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Array(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Array(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsList)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Array(ClockWork.ScriptBuilder.JavaScript.JsList)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Block(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Block(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(System.Object,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(System.Object,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(System.Object,ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(System.Object,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Call(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Call(System.Object,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Call(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.JavaScript.JsArguments)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Call(System.Object,ClockWork.ScriptBuilder.JavaScript.JsArguments)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.List(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.List(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Statement(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Statement(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Parameters(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Parameters(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Parameters(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsList)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Parameters(ClockWork.ScriptBuilder.JavaScript.JsList)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Arguments(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Arguments(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Arguments(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsList)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Arguments(ClockWork.ScriptBuilder.JavaScript.JsList)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.If(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.If(System.Object,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.If(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.If(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Render(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.Render(System.Object,System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.Js.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Arguments(ClockWork.ScriptBuilder.JavaScript.JsList)">
      <apidata name="Arguments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Arguments(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsList)">
      <apidata name="Arguments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="args">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Arguments(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name="Arguments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Arguments(System.Object[])">
      <apidata name="Arguments" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Array(ClockWork.ScriptBuilder.JavaScript.JsList)">
      <apidata name="Array" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="list">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Array(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsList)">
      <apidata name="Array" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="list">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Array(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name="Array" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="list" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Array(System.Object[])">
      <apidata name="Array" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="list" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Block(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Block(System.Object[])">
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Call(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.JavaScript.JsArguments)">
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="functionName">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Call(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object[])">
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="functionName">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Call(System.Object,ClockWork.ScriptBuilder.JavaScript.JsArguments)">
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="functionName">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Call(System.Object,System.Object[])">
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="functionName">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object[])">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(System.Object,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(System.Object,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(System.Object,ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(System.Object,System.Object[])">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Function(System.Object[])">
      <apidata name="Function" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.If(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object)">
      <apidata name="If" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="trueItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.If(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object,System.Object)">
      <apidata name="If" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="trueItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="falseItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.If(System.Object,System.Object)">
      <apidata name="If" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="trueItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.If(System.Object,System.Object,System.Object)">
      <apidata name="If" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="trueItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="falseItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.List(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name="List" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.List(System.Object[])">
      <apidata name="List" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.New(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object[])">
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="className">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsNew" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.New(System.Object,System.Object[])">
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="className">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsNew" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Object(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name="Object" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="properties" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Object(System.Object[])">
      <apidata name="Object" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="properties" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Parameters(ClockWork.ScriptBuilder.JavaScript.JsList)">
      <apidata name="Parameters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Parameters(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsList)">
      <apidata name="Parameters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Parameters(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name="Parameters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Parameters(System.Object[])">
      <apidata name="Parameters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Property(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object)">
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Property(System.Object,System.Object)">
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Q(System.Object)">
      <apidata name="Q" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsQuote" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.QQ(System.Object)">
      <apidata name="QQ" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsQuote" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Quote(System.Object)">
      <apidata name="Quote" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsQuote" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.QuoteDouble(System.Object)">
      <apidata name="QuoteDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsQuote" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Render(System.Object)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Render(System.Object,System.Int32)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="indentations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Statement(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name="Statement" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.Js.Statement(System.Object[])">
      <apidata name="Statement" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.Js" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsArguments">
      <apidata name="JsArguments" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(ClockWork.ScriptBuilder.JavaScript.JsList)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsList)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.OnInitialise" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsArguments.List" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Remove(System.Object)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Set" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.SetWrapper(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Before" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Content" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.After" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ContentLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.InternalIndents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ScriptIfResult" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(ClockWork.ScriptBuilder.JavaScript.JsList)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="list">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsList)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="list">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsArguments.List">
      <apidata name="List" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_List" />
      <setter name="set_List" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArguments.OnInitialise">
      <apidata name="OnInitialise" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsArray">
      <apidata name="JsArray" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArray.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArray.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArray.#ctor(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArray.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArray.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArray.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsArray.OnInitialise" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsArray.List" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Remove(System.Object)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Set" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.SetWrapper(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Before" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Content" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.After" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ContentLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.InternalIndents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ScriptIfResult" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArray.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArray.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArray.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArray.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArray.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArray.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsArray.List">
      <apidata name="List" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_List" />
      <setter name="set_List" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsArray.OnInitialise">
      <apidata name="OnInitialise" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArray" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsBlock">
      <apidata name="JsBlock" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(ClockWork.ScriptBuilder.Script)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.Script)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.OnInitialise" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsBlock.Script" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsBlock.DefaultLayout" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Remove(System.Object)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Set" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.SetWrapper(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Before" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Content" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.After" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ContentLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.InternalIndents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ScriptIfResult" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(ClockWork.ScriptBuilder.Script)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="script">
          <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.Script)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="script">
          <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsBlock.DefaultLayout">
      <apidata name="DefaultLayout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultLayout" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsBlock.OnInitialise">
      <apidata name="OnInitialise" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsBlock.Script">
      <apidata name="Script" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Script" />
      <setter name="set_Script" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.Script" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsCall">
      <apidata name="JsCall" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsCall.#ctor(System.Object,ClockWork.ScriptBuilder.JavaScript.JsArguments)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsCall.#ctor(System.Object,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsCall.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.JavaScript.JsArguments)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsCall.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsCall.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsCall.Arguments" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsCall.FunctionName" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsCall.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.JavaScript.JsArguments)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="functionName">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsCall.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="functionName">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsCall.#ctor(System.Object,ClockWork.ScriptBuilder.JavaScript.JsArguments)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="functionName">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsCall.#ctor(System.Object,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="functionName">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsCall.Arguments">
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Arguments" />
      <setter name="set_Arguments" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsCall.FunctionName">
      <apidata name="FunctionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FunctionName" />
      <setter name="set_FunctionName" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsCall.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider">
      <apidata name="JsFormatProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptFormatProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider.Format(System.String,System.Object,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider.#ctor" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider.Instance" />
        <element api="M:ClockWork.ScriptBuilder.ScriptFormatProvider.System#IFormatProvider#GetFormat(System.Type)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider.Format(System.String,System.Object,System.IFormatProvider)">
      <apidata name="Format" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptFormatProvider.Format(System.String,System.Object,System.IFormatProvider)">
          <type api="T:ClockWork.ScriptBuilder.ScriptFormatProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="formatProvider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <type api="T:System.ICustomFormatter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider.Instance">
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFormatProvider" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsFunction">
      <apidata name="JsFunction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(System.String,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(System.String,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(System.String,ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(System.String,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.JavaScript.JsParameters)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String,ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsParameters)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsFunction.Name" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsFunction.Parameters" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsFunction.Block" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsFunction.BlockLayout" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.JavaScript.JsParameters)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsParameters)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="script">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String,ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(System.String,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="scriptBlock">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(System.String,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="script">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(System.String,ClockWork.ScriptBuilder.JavaScript.JsParameters,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.#ctor(System.String,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsFunction.Block">
      <apidata name="Block" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Block" />
      <setter name="set_Block" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsFunction.BlockLayout">
      <apidata name="BlockLayout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BlockLayout" />
      <setter name="set_BlockLayout" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsFunction.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)">
      <apidata name="OnLayoutChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.LayoutChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsFunction.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsFunction.Parameters">
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Parameters" />
      <setter name="set_Parameters" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsFunction" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsIf">
      <apidata name="JsIf" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsIf.#ctor(System.Object,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsIf.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsIf.#ctor(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsIf.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsIf.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsIf.Condition" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsIf.TrueBlock" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsIf.FalseBlock" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsIf.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="trueItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsIf.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="trueItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="falseItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsIf.#ctor(System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="trueItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsIf.#ctor(System.Object,System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="trueItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="falseItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsIf.Condition">
      <apidata name="Condition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Condition" />
      <setter name="set_Condition" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsIf.FalseBlock">
      <apidata name="FalseBlock" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FalseBlock" />
      <setter name="set_FalseBlock" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsIf.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsIf.TrueBlock">
      <apidata name="TrueBlock" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TrueBlock" />
      <setter name="set_TrueBlock" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsIf" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsList">
      <apidata name="JsList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsList.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsList.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsList.#ctor(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsList.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsList.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsList.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsList.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.AddToRenderList(System.Collections.Generic.List{System.Object},System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.WriteSeperator(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RegisterItem(System.String,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Remove(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.ToString" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Items" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Seperator" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.ScriptIfResult" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContentInSet" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsList.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsList.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsList.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsList.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsList.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsList.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsList.OnInitialise">
      <apidata name="OnInitialise" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsNew">
      <apidata name="JsNew" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsNew.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsNew.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.JavaScript.JsArguments)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsNew.#ctor(ClockWork.ScriptBuilder.JavaScript.JsCall)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsNew.#ctor(System.Object,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsNew.#ctor(System.String,ClockWork.ScriptBuilder.JavaScript.JsArguments)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsNew.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsNew.Call" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsNew.#ctor(ClockWork.ScriptBuilder.JavaScript.JsCall)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="call">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsNew" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsNew.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,ClockWork.ScriptBuilder.JavaScript.JsArguments)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="className">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsNew" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsNew.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="className">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsNew" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsNew.#ctor(System.Object,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="className">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsNew" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsNew.#ctor(System.String,ClockWork.ScriptBuilder.JavaScript.JsArguments)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="className">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsArguments" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsNew" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsNew.Call">
      <apidata name="Call" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Call" />
      <setter name="set_Call" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsCall" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsNew" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsNew.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsNew" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsObject">
      <apidata name="JsObject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(ClockWork.ScriptBuilder.JavaScript.JsPropertyList)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsPropertyList)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsObject.OnInitialise" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsObject.Properties" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Remove(System.Object)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Set" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.SetWrapper(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Before" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Content" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.After" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ContentLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.InternalIndents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ScriptIfResult" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(ClockWork.ScriptBuilder.JavaScript.JsPropertyList)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="list">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsPropertyList)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="list">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsObject.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsObject.OnInitialise">
      <apidata name="OnInitialise" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsObject.Properties">
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Properties" />
      <setter name="set_Properties" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsParameters">
      <apidata name="JsParameters" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(ClockWork.ScriptBuilder.JavaScript.JsList)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsList)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsParameters.List" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsParameters.ListLayout" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Remove(System.Object)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Set" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.SetWrapper(System.Object,System.Object)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Before" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Content" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.After" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ContentLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.InternalIndents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ScriptIfResult" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(ClockWork.ScriptBuilder.JavaScript.JsList)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="list">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.JavaScript.JsList)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="list">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsParameters.List">
      <apidata name="List" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_List" />
      <setter name="set_List" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsParameters.ListLayout">
      <apidata name="ListLayout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ListLayout" />
      <setter name="set_ListLayout" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.OnInitialise">
      <apidata name="OnInitialise" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)">
      <apidata name="OnLayoutChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.LayoutChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsParameters.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsProperty">
      <apidata name="JsProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsProperty.#ctor(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsProperty.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsProperty.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsProperty.Name" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsProperty.Value" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsProperty.HasRenderContent" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsProperty.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsProperty" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsProperty.#ctor(System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsProperty" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsProperty.HasRenderContent">
      <apidata name="HasRenderContent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasRenderContent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:ClockWork.ScriptBuilder.IScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsProperty" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsProperty.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsProperty" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsProperty.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsProperty" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsProperty.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsProperty" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList">
      <apidata name="JsPropertyList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsList" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.#ctor(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.FindProperty(System.String)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.FindPropertyValue(System.String)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.Add(System.String,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.AddToRenderList(System.Collections.Generic.List{System.Object},System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsList.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.WriteSeperator(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RegisterItem(System.String,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Remove(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.ToString" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Items" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Seperator" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.ScriptIfResult" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContentInSet" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lines" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.Add(System.String,System.Object)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.AddToRenderList(System.Collections.Generic.List{System.Object},System.Object)">
      <apidata name="AddToRenderList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptSet.AddToRenderList(System.Collections.Generic.List{System.Object},System.Object)">
          <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="dest">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.FindProperty(System.String)">
      <apidata name="FindProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsPropertyList.FindPropertyValue(System.String)">
      <apidata name="FindPropertyValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsPropertyList" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsQuote">
      <apidata name="JsQuote" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsQuote.#ctor(System.Object,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsQuote.#ctor(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsQuote.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsQuote.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsQuote.Text" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsQuote.DoubleQuotes" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsQuote.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsQuote" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsQuote.#ctor(System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsQuote" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsQuote.#ctor(System.Object,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="doubleQuotes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsQuote" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsQuote.DoubleQuotes">
      <apidata name="DoubleQuotes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DoubleQuotes" />
      <setter name="set_DoubleQuotes" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsQuote" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsQuote.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsQuote" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsQuote.Text">
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Text" />
      <setter name="set_Text" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsQuote" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsStatement">
      <apidata name="JsStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptSetWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptWrapper" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(ClockWork.ScriptBuilder.ScriptLine)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.ScriptLine)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.OnInitialise" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsStatement.Line" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSetWrapper.Remove(System.Object)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Set" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSetWrapper.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.SetWrapper(System.Object,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptWrapper.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Before" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.Content" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.After" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ContentLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.InternalIndents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptWrapper.ScriptIfResult" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(ClockWork.ScriptBuilder.ScriptLayout)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(ClockWork.ScriptBuilder.ScriptLayout,ClockWork.ScriptBuilder.ScriptLine)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="line">
          <type api="T:ClockWork.ScriptBuilder.ScriptLine" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="parts">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="parts" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(ClockWork.ScriptBuilder.ScriptLine)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="line">
          <type api="T:ClockWork.ScriptBuilder.ScriptLine" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parts">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.#ctor(System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parts" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsStatement.Line">
      <apidata name="Line" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Line" />
      <setter name="set_Line" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLine" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsStatement.OnInitialise">
      <apidata name="OnInitialise" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.JsVariableFactory">
      <apidata name="JsVariableFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsVariableFactory.Create(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.JsVariableFactory.#ctor" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.JsVariableFactory.LetterSet" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsVariableFactory.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsVariableFactory" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.JsVariableFactory.Create(System.Object)">
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptCompressible" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsVariableFactory" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.JsVariableFactory.LetterSet">
      <apidata name="LetterSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LetterSet" />
      <setter name="set_LetterSet" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsVariableFactory" ref="true" />
      </containers>
    </api>
    <api id="N:ClockWork.ScriptBuilder.JavaScript.ExtJs">
      <apidata name="ClockWork.ScriptBuilder.JavaScript.ExtJs" group="namespace" />
      <elements>
        <element api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass" />
        <element api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent" />
      </elements>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs">
      <apidata name="ExtJs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.Apply(ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.Apply(System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.ApplyIf(ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.ApplyIf(System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.Component(System.Object,System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.Class(System.Object,System.Object,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.GetNamespace(System.String)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.BaseCall(System.Object,System.Object,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.BaseApply(System.Object,System.String)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.ExtJsType(System.Type)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.Apply(ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name="Apply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="config">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.Apply(System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name="Apply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reciever">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="config">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.ApplyIf(ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name="ApplyIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="config">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.ApplyIf(System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name="ApplyIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reciever">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="config">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.BaseApply(System.Object,System.String)">
      <apidata name="BaseApply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="className">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="function">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.BaseCall(System.Object,System.Object,System.Object[])">
      <apidata name="BaseCall" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="className">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="function">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.Class(System.Object,System.Object,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name="Class" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="className">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="baseClass">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="constructor">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.Component(System.Object,System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name="Component" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentName">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="baseComponent">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="componentObject">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.ExtJsType(System.Type)">
      <apidata name="ExtJsType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs.GetNamespace(System.String)">
      <apidata name="GetNamespace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="className">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJs" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply">
      <apidata name="ExtJsApply" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.#ctor(ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.#ctor(System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.#ctor(ClockWork.ScriptBuilder.JavaScript.JsObject,ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.#ctor(System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject,ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.Receiver" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.Config" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.Defaults" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.HasRenderContent" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.#ctor(ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="config">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.#ctor(ClockWork.ScriptBuilder.JavaScript.JsObject,ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="config">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
        <parameter name="defaults">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.#ctor(System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="reciever">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="config">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.#ctor(System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject,ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="reciever">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="config">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
        <parameter name="defaults">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.Config">
      <apidata name="Config" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Config" />
      <setter name="set_Config" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.Defaults">
      <apidata name="Defaults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Defaults" />
      <setter name="set_Defaults" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.HasRenderContent">
      <apidata name="HasRenderContent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasRenderContent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:ClockWork.ScriptBuilder.IScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply.Receiver">
      <apidata name="Receiver" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Receiver" />
      <setter name="set_Receiver" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApply" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf">
      <apidata name="ExtJsApplyIf" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.#ctor(ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.#ctor(System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.#ctor(ClockWork.ScriptBuilder.JavaScript.JsObject,ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.#ctor(System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject,ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.Receiver" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.Config" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.Defaults" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.HasRenderContent" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.#ctor(ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="config">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.#ctor(ClockWork.ScriptBuilder.JavaScript.JsObject,ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="config">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
        <parameter name="defaults">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.#ctor(System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="reciever">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="config">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.#ctor(System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject,ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="reciever">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="config">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
        <parameter name="defaults">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.Config">
      <apidata name="Config" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Config" />
      <setter name="set_Config" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.Defaults">
      <apidata name="Defaults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Defaults" />
      <setter name="set_Defaults" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.HasRenderContent">
      <apidata name="HasRenderContent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasRenderContent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:ClockWork.ScriptBuilder.IScriptItem.HasRenderContent">
          <type api="T:ClockWork.ScriptBuilder.IScriptItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf.Receiver">
      <apidata name="Receiver" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Receiver" />
      <setter name="set_Receiver" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsApplyIf" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass">
      <apidata name="ExtJsClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass.#ctor(System.Object,System.Object,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass.ClassName" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass.BaseClass" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass.Parameters" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass.Constructor" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass.#ctor(System.Object,System.Object,ClockWork.ScriptBuilder.JavaScript.JsParameters,ClockWork.ScriptBuilder.JavaScript.JsBlock)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="className">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="baseClass">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
        </parameter>
        <parameter name="constructor">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass.BaseClass">
      <apidata name="BaseClass" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BaseClass" />
      <setter name="set_BaseClass" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass.ClassName">
      <apidata name="ClassName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClassName" />
      <setter name="set_ClassName" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass.Constructor">
      <apidata name="Constructor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Constructor" />
      <setter name="set_Constructor" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass.Parameters">
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Parameters" />
      <setter name="set_Parameters" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsParameters" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsClass" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent">
      <apidata name="ExtJsComponent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.#ctor(System.Object,System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.ComponentExample(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.ComponentName" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.BaseComponent" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.Object" />
        <element api="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.RegistryName" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.#ctor(System.Object,System.Object,ClockWork.ScriptBuilder.JavaScript.JsObject)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="componentName">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="baseComponent">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="componentObject">
          <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.BaseComponent">
      <apidata name="BaseComponent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BaseComponent" />
      <setter name="set_BaseComponent" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.ComponentExample(ClockWork.ScriptBuilder.IScriptWriter)">
      <apidata name="ComponentExample" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:ClockWork.ScriptBuilder.IScriptWriter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.ComponentName">
      <apidata name="ComponentName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ComponentName" />
      <setter name="set_ComponentName" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.Object">
      <apidata name="Object" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Object" />
      <setter name="set_Object" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.JavaScript.JsObject" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent.RegistryName">
      <apidata name="RegistryName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RegistryName" />
      <setter name="set_RegistryName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.JavaScript.ExtJs" />
        <type api="T:ClockWork.ScriptBuilder.JavaScript.ExtJs.ExtJsComponent" ref="true" />
      </containers>
    </api>
    <api id="N:ClockWork.ScriptBuilder.XmlScript">
      <apidata name="ClockWork.ScriptBuilder.XmlScript" group="namespace" />
      <elements>
        <element api="T:ClockWork.ScriptBuilder.XmlScript.XsText" />
        <element api="T:ClockWork.ScriptBuilder.XmlScript.Xs" />
        <element api="T:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer" />
        <element api="T:ClockWork.ScriptBuilder.XmlScript.XsAttribute" />
        <element api="T:ClockWork.ScriptBuilder.XmlScript.XsCData" />
        <element api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" />
        <element api="T:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider" />
      </elements>
    </api>
    <api id="T:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer">
      <apidata name="IXmlRenderer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsAttribute" ref="true" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsCData" ref="true" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </implementors>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer.Render(System.Xml.XmlElement)" />
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer.Render(System.Xml.XmlElement)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.XmlScript.Xs">
      <apidata name="Xs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.XmlScript.Xs.Element(ClockWork.ScriptBuilder.ScriptLayout,System.String,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.Xs.Element(System.String,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.Xs.Attribute(System.String,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.Xs.CData(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.Xs.Text(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.Xs.Render(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.Xs.Render(System.Object,System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.Xs.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.Xs.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.Xs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.Xs.Attribute(System.String,System.Object)">
      <apidata name="Attribute" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.Xs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.Xs.CData(System.Object)">
      <apidata name="CData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsCData" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.Xs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.Xs.Element(ClockWork.ScriptBuilder.ScriptLayout,System.String,System.Object[])">
      <apidata name="Element" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="properties" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.Xs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.Xs.Element(System.String,System.Object[])">
      <apidata name="Element" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="properties" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.Xs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.Xs.Render(System.Object)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.Xs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.Xs.Render(System.Object,System.Int32)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="indentations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.Xs" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.Xs.Text(System.Object)">
      <apidata name="Text" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsText" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.Xs" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.XmlScript.XsAttribute">
      <apidata name="XsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer" ref="true" />
      </implements>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsAttribute.#ctor(System.String,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsAttribute.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsAttribute.Encode(System.String)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsAttribute.Render(System.Xml.XmlElement)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.XmlScript.XsAttribute.Name" />
        <element api="P:ClockWork.ScriptBuilder.XmlScript.XsAttribute.Value" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsAttribute.#ctor(System.String,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsAttribute.Encode(System.String)">
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.XmlScript.XsAttribute.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsAttribute.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsAttribute.Render(System.Xml.XmlElement)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="parentElement">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer.Render(System.Xml.XmlElement)">
          <type api="T:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.XmlScript.XsAttribute.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.XmlScript.XsCData">
      <apidata name="XsCData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer" ref="true" />
      </implements>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsCData.#ctor(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsCData.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsCData.Render(System.Xml.XmlElement)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.XmlScript.XsCData.Data" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsCData.#ctor(System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsCData" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.XmlScript.XsCData.Data">
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Data" />
      <setter name="set_Data" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsCData" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsCData.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsCData" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsCData.Render(System.Xml.XmlElement)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="parentElement">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer.Render(System.Xml.XmlElement)">
          <type api="T:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsCData" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.XmlScript.XsElement">
      <apidata name="XsElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer" ref="true" />
      </implements>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsElement.#ctor(System.String)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsElement.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsElement.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsElement.#ctor(System.String,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsElement.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsElement.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String,System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsElement.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsElement.AddToRenderList(System.Collections.Generic.List{System.Object},System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsElement.Render(System.Xml.XmlDocument)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsElement.Render(System.Xml.XmlElement)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsElement.CreateXmlElement(System.Xml.XmlDocument)" />
        <element api="P:ClockWork.ScriptBuilder.XmlScript.XsElement.Name" />
        <element api="P:ClockWork.ScriptBuilder.XmlScript.XsElement.DefaultLayout" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.WriteSeperator(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.InsertRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.AddRange(System.Object[])" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RegisterItem(System.String,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.IndexOf(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Insert(System.Int32,System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.RemoveAt(System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Clear" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Contains(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.CopyTo(System.Object[],System.Int32)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Remove(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.Add(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptSet.ToString" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Items" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Seperator" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.ScriptIfResult" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.HasRenderContentInSet" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Item(System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.Count" />
        <element api="P:ClockWork.ScriptBuilder.ScriptSet.IsReadOnly" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsElement.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsElement.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsElement.#ctor(ClockWork.ScriptBuilder.ScriptLayout,System.String,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="layout">
          <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsElement.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsElement.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Object})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsElement.#ctor(System.String,System.Object[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="items" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsElement.AddToRenderList(System.Collections.Generic.List{System.Object},System.Object)">
      <apidata name="AddToRenderList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptSet.AddToRenderList(System.Collections.Generic.List{System.Object},System.Object)">
          <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="dest">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsElement.CreateXmlElement(System.Xml.XmlDocument)">
      <apidata name="CreateXmlElement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="doc">
          <type api="T:System.Xml.XmlDocument" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlElement" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.XmlScript.XsElement.DefaultLayout">
      <apidata name="DefaultLayout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultLayout" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.ScriptLayout" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.XmlScript.XsElement.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsElement.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptSet.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptSet" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsElement.Render(System.Xml.XmlDocument)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="doc">
          <type api="T:System.Xml.XmlDocument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsElement.Render(System.Xml.XmlElement)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="parentElement">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer.Render(System.Xml.XmlElement)">
          <type api="T:ClockWork.ScriptBuilder.XmlScript.IXmlRenderer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsElement" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider">
      <apidata name="XsFormatProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptFormatProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider.Format(System.String,System.Object,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider.#ctor" />
        <element api="P:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider.Instance" />
        <element api="P:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider.DateTimeMode" />
        <element api="M:ClockWork.ScriptBuilder.ScriptFormatProvider.System#IFormatProvider#GetFormat(System.Type)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider.DateTimeMode">
      <apidata name="DateTimeMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DateTimeMode" />
      <setter name="set_DateTimeMode" />
      <returns>
        <type api="T:System.Xml.XmlDateTimeSerializationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider.Format(System.String,System.Object,System.IFormatProvider)">
      <apidata name="Format" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptFormatProvider.Format(System.String,System.Object,System.IFormatProvider)">
          <type api="T:ClockWork.ScriptBuilder.ScriptFormatProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="formatProvider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
          <type api="T:System.ICustomFormatter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider.Instance">
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsFormatProvider" ref="true" />
      </containers>
    </api>
    <api id="T:ClockWork.ScriptBuilder.XmlScript.XsText">
      <apidata name="XsText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsText.#ctor(System.Object)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsText.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsText.Encode(System.String)" />
        <element api="M:ClockWork.ScriptBuilder.XmlScript.XsText.Render(System.Xml.XmlElement)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.Stream,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.Text.StringBuilder,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.StreamWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(System.IO.TextWriter,System.IFormatProvider)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.Render(ClockWork.ScriptBuilder.IScriptWriter,System.Int32)" />
        <element api="P:ClockWork.ScriptBuilder.XmlScript.XsText.Text" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnInitialise" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout,System.Boolean)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.TrySetLayout(ClockWork.ScriptBuilder.ScriptLayout)" />
        <element api="M:ClockWork.ScriptBuilder.ScriptItem.OnLayoutChanged(ClockWork.ScriptBuilder.LayoutChangedEventArgs)" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.DefaultLayout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Layout" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.IsLayoutEstablished" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.Indents" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.HasRenderContent" />
        <element api="P:ClockWork.ScriptBuilder.ScriptItem.ScriptIfResult" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.LayoutChanged" />
        <element api="E:ClockWork.ScriptBuilder.ScriptItem.Rendering" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsText.#ctor(System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsText" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsText.Encode(System.String)">
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsText" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsText.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
      <apidata name="OnRender" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:ClockWork.ScriptBuilder.ScriptItem.OnRender(ClockWork.ScriptBuilder.RenderingEventArgs)">
          <type api="T:ClockWork.ScriptBuilder.ScriptItem" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:ClockWork.ScriptBuilder.RenderingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsText" ref="true" />
      </containers>
    </api>
    <api id="M:ClockWork.ScriptBuilder.XmlScript.XsText.Render(System.Xml.XmlElement)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parentElement">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsText" ref="true" />
      </containers>
    </api>
    <api id="P:ClockWork.ScriptBuilder.XmlScript.XsText.Text">
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Text" />
      <setter name="set_Text" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="ClockWork.ScriptBuilder" module="ClockWork.ScriptBuilder" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:ClockWork.ScriptBuilder.XmlScript" />
        <type api="T:ClockWork.ScriptBuilder.XmlScript.XsText" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>